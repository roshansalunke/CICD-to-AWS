name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Runs the workflow on every push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ec2-54-255-180-152.ap-southeast-1.compute.amazonaws.com >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh ubuntu@ec2-54-255-180-152.ap-southeast-1.compute.amazonaws.com << 'EOF'
          # Change to the app directory or clone if missing
          if [ ! -d "/var/www/app/.git" ]; then
            sudo rm -rf /var/www/app
            sudo git clone https://github.com/roshansalunke/CICD-to-AWS.git /var/www/app
          fi
          
          cd /var/www/app
          
          # Pull the latest code
          sudo git reset --hard origin/main
          sudo git pull origin main

          # Install dependencies
          npm install --production

          # Check if PM2 is running, start if not, otherwise restart
          if pm2 list | grep -q "CICID-APP"; then
            pm2 restart CICID-APP
          else
            pm2 start server.js --name CICID-APP
          fi
          EOF
